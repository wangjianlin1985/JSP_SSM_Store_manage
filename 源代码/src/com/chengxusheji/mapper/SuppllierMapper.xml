<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.SuppllierMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加供应商记录 -->
	<insert id="addSuppllier" parameterType="suppllier">
		insert into t_suppllier(supplierName,supplierLawyer,supplierTelephone,supplierAddress) values 
		(#{supplierName},#{supplierLawyer},#{supplierTelephone},#{supplierAddress})
	</insert>

	<!-- 按照查询条件分页查询供应商记录 -->
	<select id="querySuppllier" resultMap="suppllierMap" >
		select t_suppllier.* from t_suppllier ${where} limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="suppllierMap" type="suppllier">
        <id property="supplierId" column="supplierId" />
    </resultMap>

    <!-- 按照查询条件查询所有供应商记录 -->
	<select id="querySuppllierList" resultMap="suppllierMap" >
		select t_suppllier.* from t_suppllier ${where}
	</select>

    <!-- 按照查询条件的供应商记录数 -->
	<select id="querySuppllierCount" resultType="int">
		select count(*) from t_suppllier ${where}
	</select>

	<!-- 根据主键查询某个供应商记录 -->
	<select id="getSuppllier" parameterType="int" resultMap="suppllierMap">
		select * from t_suppllier where t_suppllier.supplierId = #{supplierId}
	</select>

	<!-- 更新供应商记录 -->
	<update id="updateSuppllier" parameterType="suppllier">
		update t_suppllier set supplierName=#{supplierName},supplierLawyer=#{supplierLawyer},supplierTelephone=#{supplierTelephone},supplierAddress=#{supplierAddress} where supplierId = #{supplierId}
	</update>

	<!-- 删除供应商记录 -->
	<delete id="deleteSuppllier" parameterType="int">
		delete from t_suppllier where supplierId=#{supplierId}
	</delete>

</mapper>
